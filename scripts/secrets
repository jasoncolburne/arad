#!/usr/bin/env bash

set -eo pipefail

# use like this:
#   echo "${SOME_SECRET}" | scripts/secrets put some_secret_name
# or
#   cat some_secret_file.txt | scripts/secrets put some_secret_name
put() {
  local SECRET_NAME=$1

  vault kv put -mount=secret "${SECRET_NAME}" value=-
}

get() {
  local SECRET_NAME=$1

  vault kv get -mount=secret --field=value "${SECRET_NAME}" || vault kv get -mount=secret --field=pem "${SECRET_NAME}"
}

dump() {
  rm -rf secrets
  mkdir secrets

  LINES=$(vault kv list secret/ | wc -l)
  let LINES--
  let LINES--

  for SECRET_NAME in $(vault kv list secret/ | tail -n${LINES}); do
    ./scripts/secrets get ${SECRET_NAME} > secrets/${SECRET_NAME}
  done
}

restore() {
  cd secrets
  for SECRET_NAME in *; do
    cat ${SECRET_NAME} | ./scripts/secrets put ${SECRET_NAME}
  done
}

execute() {
  local COMMAND=$1
  local ARGUMENTS=$(echo $2 | sed "s/^ *//" | sed "s/ *\$//")

  if [[ "${COMMAND}" == "put" ]]; then
    put "${ARGUMENTS}"
  elif [[ "${COMMAND}" == "get" ]]; then
    get "${ARGUMENTS}"
  elif [[ "${COMMAND}" == "dump" ]]; then
    dump
  elif [[ "${COMMAND}" == "restore" ]]; then
    restore
  else
    echo "unknown command ${COMMAND}"
    exit 1
  fi
}

execute "$1" "$2 $3 $4 $5 $6 $7 $8 $9"
