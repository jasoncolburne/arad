{"version":3,"file":"static/js/594.cf556182.chunk.js","mappings":"sPAqHA,UAtGc,WACZ,OAA4BA,EAAAA,EAAAA,MAApBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACf,EAA0BC,EAAAA,SAAe,IAAzC,eAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCF,EAAAA,SAAe,IAAnD,eAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAwCJ,EAAAA,SAAe,IAAvD,eAAOK,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MAEjBR,EAAAA,WAAgB,YACVS,EAAAA,EAAAA,IAASX,EAAMY,cACjBH,EAAS,IAEZ,GAAE,CAACT,EAAMY,YAAaH,IAEvB,IAAMI,EAAe,SAACC,GAChB,CAAC,IAAK,KAAKC,SAASD,EAASE,QAC/BR,EAAgB,kCAEhBA,EAAgB,uBAEnB,EAEKS,EAAS,yCAAG,WAAOC,GAAP,mFAChBA,EAAMC,kBACF,CAAChB,EAAOE,GAAYU,SAAS,IAFjB,gBAGdP,EAAgB,mBAHF,8BAKRY,EAAwB,CAAEjB,MAAAA,EAAOE,WAAAA,GALzB,UAMoCgB,EAAAA,EAAAA,KAAMC,KACtD,iBACA,KACAF,EACAP,GAVY,YAaGU,KAPXT,EANQ,UAcNU,GAAWC,EAAAA,EAAAA,IAAoCX,GACrDb,EAASuB,IAfG,4CAAH,sDAoBf,OACE,SAAC,KAAD,CAAQE,EAAE,OAAV,UACE,SAAC,KAAD,CAAKC,EAAE,eAAP,UACE,6BACE,UAAC,KAAD,CAAaC,YAAU,EAAvB,mBAEE,SAAC,KAAD,CAAYC,KAAK,MAAjB,UACE,SAAC,KAAD,CACEC,GAAG,cACHC,KAAK,QACLC,aAAa,KACbC,YAAY,MACZC,aAAa,MACbC,iBAAiB,QACjBC,SAAU,SAAClB,GACTd,EAASc,EAAMmB,OAAOC,MACvB,MAZP,YAgBE,SAAC,KAAD,CAAYT,KAAK,MAAjB,UACE,SAAC,KAAD,CACEC,GAAG,mBACHC,KAAK,WACLC,aAAa,KACbC,YAAY,MACZC,aAAa,MACbC,iBAAiB,QACjBC,SAAU,SAAClB,GACTZ,EAAcY,EAAMmB,OAAOC,MAC5B,UAIP,SAAC,KAAD,CACER,GAAG,eACHS,MAAM,OACNR,KAAK,SACLF,KAAK,MACLG,aAAa,KACbQ,MAAM,QACNC,gBAAgB,QAChBC,WAAW,SACXC,cAAc,MACdC,WAAW,MACXC,UAAU,OACVC,YAAY,gBACZC,QAAS9B,EAbX,oBAiBA,SAAC,KAAD,CAAQa,GAAG,qBAAX,SACoB,KAAjBvB,EAAsBA,EAAe,aAMjD,C","sources":["identification/Login/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router\";\n\nimport { Box, Center } from \"@chakra-ui/layout\";\nimport { FormControl, Button } from \"@chakra-ui/react\";\nimport { Input, InputGroup } from \"@chakra-ui/input\";\n\nimport { Api } from \"../../api/Api\";\nimport { LoginRequest, LoginResponse } from \"../../api/types/friendly\";\nimport {\n  stateFromAuthenticationResponseData,\n  useGlobalState,\n} from \"../../GlobalState\";\nimport { loggedIn } from \"../../utility/authorization\";\n\nconst Login = () => {\n  const { state, setState } = useGlobalState();\n  const [email, setEmail] = React.useState(\"\");\n  const [passphrase, setPassphrase] = React.useState(\"\");\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n\n  const navigate = useNavigate();\n\n  React.useEffect(() => {\n    if (loggedIn(state.credentials!)) {\n      navigate(\"/\");\n    }\n  }, [state.credentials, navigate]);\n\n  const handleErrors = (response: Response) => {\n    if ([401, 403].includes(response.status)) {\n      setErrorMessage(\"incorrect username or password\");\n    } else {\n      setErrorMessage(\"something went wrong\");\n    }\n  };\n\n  const postLogin = async (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    if ([email, passphrase].includes(\"\")) {\n      setErrorMessage(\"cannot be blank\");\n    } else {\n      const request: LoginRequest = { email, passphrase };\n      const response: LoginResponse | undefined = await Api().post(\n        \"identify/login\",\n        null,\n        request,\n        handleErrors\n      );\n\n      if (response !== undefined) {\n        const newState = stateFromAuthenticationResponseData(response);\n        setState(newState);\n      }\n    }\n  };\n\n  return (\n    <Center h=\"100%\">\n      <Box w=\"container.md\">\n        <form>\n          <FormControl isRequired>\n            email\n            <InputGroup size=\"2xl\">\n              <Input\n                id=\"login-email\"\n                type=\"email\"\n                borderRadius=\"lg\"\n                paddingLeft=\"4px\"\n                paddingRight=\"4px\"\n                focusBorderColor=\"black\"\n                onChange={(event) => {\n                  setEmail(event.target.value);\n                }}\n              />\n            </InputGroup>\n            password\n            <InputGroup size=\"2xl\">\n              <Input\n                id=\"login-passphrase\"\n                type=\"password\"\n                borderRadius=\"lg\"\n                paddingLeft=\"4px\"\n                paddingRight=\"4px\"\n                focusBorderColor=\"black\"\n                onChange={(event) => {\n                  setPassphrase(event.target.value);\n                }}\n              />\n            </InputGroup>\n          </FormControl>\n          <Button\n            id=\"login-submit\"\n            width=\"full\"\n            type=\"submit\"\n            size=\"2xl\" // should try and override Button to add 2xl, removing padding\n            borderRadius=\"lg\"\n            color=\"white\"\n            backgroundColor=\"black\"\n            fontWeight=\"normal\"\n            paddingBottom=\"9px\"\n            paddingTop=\"3px\"\n            marginTop=\"14px\"\n            loadingText=\"Logging in...\"\n            onClick={postLogin}\n          >\n            Login\n          </Button>\n          <Center id=\"login-errorMessage\">\n            {errorMessage !== \"\" ? errorMessage : null}\n          </Center>\n        </form>\n      </Box>\n    </Center>\n  );\n};\n\nexport default Login;\n"],"names":["useGlobalState","state","setState","React","email","setEmail","passphrase","setPassphrase","errorMessage","setErrorMessage","navigate","useNavigate","loggedIn","credentials","handleErrors","response","includes","status","postLogin","event","preventDefault","request","Api","post","undefined","newState","stateFromAuthenticationResponseData","h","w","isRequired","size","id","type","borderRadius","paddingLeft","paddingRight","focusBorderColor","onChange","target","value","width","color","backgroundColor","fontWeight","paddingBottom","paddingTop","marginTop","loadingText","onClick"],"sourceRoot":""}