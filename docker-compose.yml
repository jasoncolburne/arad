version: "3.9"

x-common-args: &common-args
  DEPLOYMENT_ENVIRONMENT: development

x-common-environment: &common-environment
  ACCESS_TOKEN_PUBLIC_KEY_PEM: |
    -----BEGIN PUBLIC KEY-----
    MHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEN60b96+vHHiVRHD02BnbaarnMQHe0pNk
    wnch0vkKkADmh9hHc/6cirDZDDr505/o+RHkdI01bRL/dODYOgv5ofa0XR1S3Uug
    pYrUr68jGm/Zbmi9BgzCbt9DPkOcCd5W
    -----END PUBLIC KEY-----
  ALLOWED_ORIGINS: http://localhost,http://front-end-react
  DATABASE_URL: postgresql+asyncpg://arad_application:arad_application@database:5432/arad_application
  LISTEN_IP: "0.0.0.0"

x-healthcheck: &healthcheck
  test: ["CMD-SHELL", "curl http://localhost/health > /dev/null"]
  interval: 5s
  timeout: 5s
  retries: 5

x-database-dependency: &database-dependency
  database:
    condition: service_healthy

services:
  front-end-react:
    build:
      context: front-end
      args: *common-args
    volumes:
      - './front-end:/app'
      - '/app/node_modules'
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost > /dev/null"]
      interval: 10s
      timeout: 10s
      retries: 11
    ports:
      - "80:80"

  api:
    build:
      context: api
      args: *common-args
    depends_on:
      identity:
        condition: service_healthy
      reader:
        condition: service_healthy
      reviewer:
        condition: service_healthy
      administrator:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost/health > /dev/null"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "8080:80" # this is how the front end talks to the api

  identity:
    build:
      context: identity
      args: *common-args
    restart: always
    environment:
      <<: *common-environment
      DATABASE_URL: postgresql+asyncpg://arad_user:arad_user@database:5432/arad_user
      CACHE_URL: redis://cache:6379/0
      DEFAULT_ADMIN_EMAIL: admin@domain.org
      ACCESS_TOKEN_PRIVATE_KEY_PEM: |
        -----BEGIN EC PRIVATE KEY-----
        MIGkAgEBBDDjQPP27NwYB6EuNB/V4lUTjgcQgWNdX5T/n6iogIkNzF2ieKyYjAe1
        6+dKIhGyqK+gBwYFK4EEACKhZANiAAQ3rRv3r68ceJVEcPTYGdtpqucxAd7Sk2TC
        dyHS+QqQAOaH2Edz/pyKsNkMOvnTn+j5EeR0jTVtEv904Ng6C/mh9rRdHVLdS6Cl
        itSvryMab9luaL0GDMJu30M+Q5wJ3lY=
        -----END EC PRIVATE KEY-----
    volumes:
      - './identity:/app'
    depends_on:
      <<: *database-dependency
      cache:
        condition: service_healthy
    healthcheck: *healthcheck

  reader:
    build:
      context: reader
      args: *common-args
    restart: always
    environment: *common-environment
    volumes:
      - './reader:/app'
    depends_on: *database-dependency
    healthcheck: *healthcheck

  reviewer:
    build:
      context: reviewer
      args: *common-args
    restart: always
    environment: *common-environment
    volumes:
      - './reviewer:/app'
    depends_on: *database-dependency
    healthcheck: *healthcheck

  administrator:
    build:
      context: administrator
      args: *common-args
    restart: always
    environment: *common-environment
    volumes:
      - './administrator:/app'
    depends_on: *database-dependency
    healthcheck: *healthcheck

  cache:
    image: "redis:bullseye"
    restart: always
    volumes:
      - 'cache:/bitnami/redis/data'
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  database:
    image: "postgres:bullseye"
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - 'database:/var/lib/postgresql/data'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  cache:
  database:
