# pylint: disable=no-member,invalid-name,unused-import

"""Role

Revision ID: 06b996e3fd46
Revises: 310956c511c7
Create Date: 2022-08-28 10:11:13.115568

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
import common.datatypes.database
import common.datatypes.domain


# revision identifiers, used by Alembic.
revision = "06b996e3fd46"
down_revision = "310956c511c7"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    table = op.create_table(
        "role",
        sa.Column(
            "id",
            common.datatypes.database.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_role_name"), "role", ["name"], unique=True)
    # ### end Alembic commands ###
    if table is not None:
        op.bulk_insert(
            table,
            [
                {"name": common.datatypes.domain.Role.READER.value},
                {"name": common.datatypes.domain.Role.REVIEWER.value},
                {"name": common.datatypes.domain.Role.ADMINISTRATOR.value},
            ],
        )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_role_name"), table_name="role")
    op.drop_table("role")
    # ### end Alembic commands ###
