/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/register": {
    post: operations["register_register_post"];
  };
  "/login": {
    post: operations["login_login_post"];
  };
  "/token": {
    post: operations["token_token_post"];
  };
  "/roles": {
    get: operations["roles_roles_get"];
  };
}

export interface components {
  schemas: {
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** LoginRequest */
    LoginRequest: {
      /** Email */
      email: string;
      /** Passphrase */
      passphrase: string;
    };
    /** LoginResponse */
    LoginResponse: {
      /** Refresh Token */
      refresh_token: string;
      user: components["schemas"]["User"];
      roles: components["schemas"]["Role"][];
    };
    /** RegisterRequest */
    RegisterRequest: {
      /** Email */
      email: string;
      /** Passphrase */
      passphrase: string;
    };
    /** RegisterResponse */
    RegisterResponse: {
      /** Refresh Token */
      refresh_token: string;
      user: components["schemas"]["User"];
      roles: components["schemas"]["Role"][];
    };
    /**
     * Role
     * @description An enumeration.
     * @enum {undefined}
     */
    Role: "READER" | "REVIEWER" | "ADMINISTRATOR";
    /** RolesResponse */
    RolesResponse: {
      roles: components["schemas"]["Role"][];
    };
    /** TokenRequest */
    TokenRequest: {
      /** Refresh Token */
      refresh_token: string;
      scope: components["schemas"]["Role"];
    };
    /** TokenResponse */
    TokenResponse: {
      /** Access Token */
      access_token: string;
    };
    /** User */
    User: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Email */
      email: string;
      roles?: components["schemas"]["Role"][];
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (Partial<string> & Partial<number>)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
}

export interface operations {
  register_register_post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["RegisterResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["RegisterRequest"];
      };
    };
  };
  login_login_post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LoginResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["LoginRequest"];
      };
    };
  };
  token_token_post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["TokenResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TokenRequest"];
      };
    };
  };
  roles_roles_get: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["RolesResponse"];
        };
      };
    };
  };
}

export interface external {}
