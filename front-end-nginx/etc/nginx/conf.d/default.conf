server {
    listen       443 ssl;
    server_name  _;
    
    keepalive_timeout 5;

    ssl_certificate     /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;

    # Share 50 MB session cache
    ssl_session_cache shared:SSL:50m;

    # Disable session tickets
    ssl_session_tickets off;

    # Use only TLSv1.2+
    ssl_protocols TLSv1.2 TLSv1.3;

    # Safe ciphers
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-\
    RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;

    # Safe curves
    ssl_ecdh_curve secp521r1:secp384r1:prime256v1;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # CloudFlare for DNS lookup
    resolver 1.1.1.1;

    add_header Content-Security-Policy "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self'; frame-ancestors 'none'";
    add_header X-Content-Type-Options "nosniff";
    add_header X-Frame-Options "sameorigin";
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    location / {
        root   /app;
        
        # this isn't actually necessary for this testing image
        if ( $uri = '/index.html' ) {
            add_header Cache-Control no-store always;
        }

        try_files $uri $uri/ /index.html;
    }

    location /health {
            access_log off;
            add_header 'Content-Type' 'application/json';
            return 200 '{"status":"ok"}';
    }
}

